name: Dump TypeConversion Japan

on:
  workflow_dispatch:
  repository_dispatch:
    types: [dump-japan]

permissions:
  contents: write

jobs:
  dump:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      
      - name: Setup git
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: Setup Ghidra
        run: |
          curl -L -o ghidra.zip "https://github.com/NationalSecurityAgency/ghidra/releases/download/Ghidra_11.4.2_build/ghidra_11.4.2_PUBLIC_20250826.zip"
          unzip ghidra.zip
          mv ghidra_11.4.2_PUBLIC ghidra
 
      - name: Get cache key
        id: get_cache_key
        run: |
          LM=$(curl -sI "https://d.apkpure.net/b/XAPK/com.YostarJP.BlueArchive?version=latest" \
               | grep -i "Last-Modified:" | cut -d' ' -f2-)
          KEY=$(date -u -d "$LM" +%Y-%m-%dT%H:%M:%SZ || true)
          echo "key=$KEY" >> $GITHUB_OUTPUT

      - name: Restore Il2Cpp Dump Cache
        id: cache_il2cpp
        uses: actions/cache@v4
        with:
          path: |
            libil2cpp.so
            metadata.json
            il2cpp.h
          key: japan-${{ steps.get_cache_key.outputs.key }} 

      - name: Dump Il2Cpp
        if: steps.cache_il2cpp.outputs.cache-hit != 'true'
        run: |
          curl -L -o ba.xapk "https://d.apkpure.net/b/XAPK/com.YostarJP.BlueArchive?version=latest"
          unzip ba.xapk
          unzip -j com.YostarJP.BlueArchive.apk assets/bin/Data/Managed/Metadata/global-metadata.dat
          unzip -j config.arm64_v8a.apk lib/arm64-v8a/libil2cpp.so
          chmod +x ./tools/Il2CppInspectorRedux
          ./tools/Il2CppInspectorRedux --select-outputs --cpp-out cpp --json-out metadata.json
          python3 ./tools/dump_il2cpp_types.py ./cpp/appdata/il2cpp-types.h ./il2cpp.h
      
      - name: Run Ghidra Script
        run: |
          mkdir -p ghidraProjects
          chmod +x ./ghidra/support/pyghidraRun
          yes | ./ghidra/support/pyghidraRun --headless ghidraProjects ba -Xmx4G -XX:ParallelGCThreads=2 -XX:CICompilerCount=2 -import libil2cpp.so -noanalysis -deleteProject -scriptPath ./ghidraScripts -preScript parse_il2cpp.py -postScript ExportTypeConversion.java
      
      - name: Upload to branch global
        run: |
          git fetch origin
          git add TypeConversion.c
          git commit -m "Prepare new TypeConversion.c"
          
          git checkout -f japan
          
          git checkout main -- TypeConversion.c
          git add TypeConversion.c
          if ! git diff --cached --quiet; then
            git commit -m "Update TypeConversion.c"
            git push -u origin japan
          else
            echo "No changes to commit"
          fi